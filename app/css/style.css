@charset "UTF-8";
:root {
  --bs-blue: #0d6efd;
  --bs-indigo: #6610f2;
  --bs-purple: #6f42c1;
  --bs-pink: #d63384;
  --bs-red: #dc3545;
  --bs-orange: #fd7e14;
  --bs-yellow: #ffc107;
  --bs-green: #198754;
  --bs-teal: #20c997;
  --bs-cyan: #0dcaf0;
  --bs-black: #000;
  --bs-white: #fff;
  --bs-gray: #6c757d;
  --bs-gray-dark: #343a40;
  --bs-gray-100: #f8f9fa;
  --bs-gray-200: #e9ecef;
  --bs-gray-300: #dee2e6;
  --bs-gray-400: #ced4da;
  --bs-gray-500: #adb5bd;
  --bs-gray-600: #6c757d;
  --bs-gray-700: #495057;
  --bs-gray-800: #343a40;
  --bs-gray-900: #212529;
  --bs-primary: #0d6efd;
  --bs-secondary: #6c757d;
  --bs-success: #198754;
  --bs-info: #0dcaf0;
  --bs-warning: #ffc107;
  --bs-danger: #dc3545;
  --bs-light: #f8f9fa;
  --bs-dark: #212529;
  --bs-primary-rgb: 13, 110, 253;
  --bs-secondary-rgb: 108, 117, 125;
  --bs-success-rgb: 25, 135, 84;
  --bs-info-rgb: 13, 202, 240;
  --bs-warning-rgb: 255, 193, 7;
  --bs-danger-rgb: 220, 53, 69;
  --bs-light-rgb: 248, 249, 250;
  --bs-dark-rgb: 33, 37, 41;
  --bs-white-rgb: 255, 255, 255;
  --bs-black-rgb: 0, 0, 0;
  --bs-body-color-rgb: 17, 17, 17;
  --bs-body-bg-rgb: 0, 0, 0;
  --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
  --bs-body-font-family: var(--bs-font-sans-serif);
  --bs-body-font-size: 1rem;
  --bs-body-font-weight: 400;
  --bs-body-line-height: 1.5;
  --bs-body-color: #111;
  --bs-body-bg: #000;
  --bs-border-width: 1px;
  --bs-border-style: solid;
  --bs-border-color: #dee2e6;
  --bs-border-color-translucent: rgba(0, 0, 0, 0.175);
  --bs-border-radius: 0.375rem;
  --bs-border-radius-sm: 0.25rem;
  --bs-border-radius-lg: 0.5rem;
  --bs-border-radius-xl: 1rem;
  --bs-border-radius-2xl: 2rem;
  --bs-border-radius-pill: 50rem;
  --bs-link-color: #0d6efd;
  --bs-link-hover-color: #0a58ca;
  --bs-code-color: #d63384;
  --bs-highlight-bg: #fff3cd;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

@media (prefers-reduced-motion: no-preference) {
  :root {
    scroll-behavior: smooth;
  }
}

body {
  margin: 0;
  font-family: var(--bs-body-font-family);
  font-size: var(--bs-body-font-size);
  font-weight: var(--bs-body-font-weight);
  line-height: var(--bs-body-line-height);
  color: var(--bs-body-color);
  text-align: var(--bs-body-text-align);
  background-color: var(--bs-body-bg);
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

hr {
  margin: 1rem 0;
  color: inherit;
  border: 0;
  border-top: 1px solid;
  opacity: 0.25;
}

h6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 500;
  line-height: 1.2;
}

h1, .h1 {
  font-size: calc(1.375rem + 1.5vw);
}
@media (min-width: 1200px) {
  h1, .h1 {
    font-size: 2.5rem;
  }
}

h2, .h2 {
  font-size: calc(1.325rem + 0.9vw);
}
@media (min-width: 1200px) {
  h2, .h2 {
    font-size: 2rem;
  }
}

h3, .h3 {
  font-size: calc(1.3rem + 0.6vw);
}
@media (min-width: 1200px) {
  h3, .h3 {
    font-size: 1.75rem;
  }
}

h4, .h4 {
  font-size: calc(1.275rem + 0.3vw);
}
@media (min-width: 1200px) {
  h4, .h4 {
    font-size: 1.5rem;
  }
}

h5, .h5 {
  font-size: 1.25rem;
}

h6, .h6 {
  font-size: 1rem;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul {
  padding-left: 2rem;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: 700;
}

dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: bolder;
}

small, .small {
  font-size: 0.875em;
}

mark, .mark {
  padding: 0.1875em;
  background-color: var(--bs-highlight-bg);
}

sub,
sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

a {
  color: var(--bs-link-color);
  text-decoration: underline;
}
a:hover {
  color: var(--bs-link-hover-color);
}

a:not([href]):not([class]), a:not([href]):not([class]):hover {
  color: inherit;
  text-decoration: none;
}

pre,
code,
kbd,
samp {
  font-family: var(--bs-font-monospace);
  font-size: 1em;
}

pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  font-size: 0.875em;
}
pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}

code {
  font-size: 0.875em;
  color: var(--bs-code-color);
  word-wrap: break-word;
}
a > code {
  color: inherit;
}

kbd {
  padding: 0.1875rem 0.375rem;
  font-size: 0.875em;
  color: var(--bs-body-bg);
  background-color: var(--bs-body-color);
  border-radius: 0.25rem;
}
kbd kbd {
  padding: 0;
  font-size: 1em;
}

figure {
  margin: 0 0 1rem;
}

img,
svg {
  vertical-align: middle;
}

table {
  caption-side: bottom;
  border-collapse: collapse;
}

caption {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: #6c757d;
  text-align: left;
}

th {
  text-align: inherit;
  text-align: -webkit-match-parent;
}

thead,
tbody,
tfoot,
tr,
td,
th {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}

label {
  display: inline-block;
}

button {
  border-radius: 0;
}

button:focus:not(:focus-visible) {
  outline: 0;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
select {
  text-transform: none;
}

[role=button] {
  cursor: pointer;
}

select {
  word-wrap: normal;
}
select:disabled {
  opacity: 1;
}

[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {
  display: none !important;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}
button:not(:disabled),
[type=button]:not(:disabled),
[type=reset]:not(:disabled),
[type=submit]:not(:disabled) {
  cursor: pointer;
}

::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

textarea {
  resize: vertical;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  float: left;
  width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: calc(1.275rem + 0.3vw);
  line-height: inherit;
}
@media (min-width: 1200px) {
  legend {
    font-size: 1.5rem;
  }
}
legend + * {
  clear: left;
}

::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}

::-webkit-inner-spin-button {
  height: auto;
}

[type=search] {
  outline-offset: -2px;
  -webkit-appearance: textfield;
}

/* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
  direction: ltr;
}
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-color-swatch-wrapper {
  padding: 0;
}

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

::file-selector-button {
  font: inherit;
  -webkit-appearance: button;
}

output {
  display: inline-block;
}

iframe {
  border: 0;
}

summary {
  display: list-item;
  cursor: pointer;
}

progress {
  vertical-align: baseline;
}

[hidden] {
  display: none !important;
}

.lead {
  font-size: 1.25rem;
  font-weight: 300;
}

.display-1 {
  font-size: calc(1.625rem + 4.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-1 {
    font-size: 5rem;
  }
}

.display-2 {
  font-size: calc(1.575rem + 3.9vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-2 {
    font-size: 4.5rem;
  }
}

.display-3 {
  font-size: calc(1.525rem + 3.3vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-3 {
    font-size: 4rem;
  }
}

.display-4 {
  font-size: calc(1.475rem + 2.7vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-4 {
    font-size: 3.5rem;
  }
}

.display-5 {
  font-size: calc(1.425rem + 2.1vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-5 {
    font-size: 3rem;
  }
}

.display-6 {
  font-size: calc(1.375rem + 1.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-6 {
    font-size: 2.5rem;
  }
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
}

.list-inline-item {
  display: inline-block;
}
.list-inline-item:not(:last-child) {
  margin-right: 0.5rem;
}

.initialism {
  font-size: 0.875em;
  text-transform: uppercase;
}

.blockquote {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}
.blockquote > :last-child {
  margin-bottom: 0;
}

.blockquote-footer {
  margin-top: -1rem;
  margin-bottom: 1rem;
  font-size: 0.875em;
  color: #6c757d;
}
.blockquote-footer::before {
  content: "— ";
}

.section {
  margin: 30px 0;
}
@media (min-width: 768px) {
  .section {
    margin: 50px 0;
  }
}
@media (min-width: 1200px) {
  .section {
    margin: 100px 0;
  }
}
.section__heading {
  text-align: center;
  position: relative;
  z-index: 0;
  margin-bottom: 66px;
}
.section__heading::after {
  content: "";
  position: absolute;
  bottom: -20px;
  right: 0;
  left: 0;
  margin: 0 auto;
  width: 142px;
  border: 1px solid #000;
}
.section__heading h2, .section__heading .h2 {
  font-size: 1.875rem;
  font-weight: 700;
  color: #282627;
}
.section__heading p {
  font-weight: 500;
  color: #7F7F7F;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
}

body {
  width: 100%;
  font-weight: 400;
  font-family: "Gotham";
  background-color: transparent;
}

a, li {
  text-decoration: none;
  list-style-type: none;
  list-style: none;
}

.row {
  width: 100%;
  margin: 0;
}

video {
  width: 100%;
  height: auto;
}

ul {
  margin: 0;
  padding: 0;
}

@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Black.woff2") format("woff2"), url("../fonts/gotham/Gotham-Black.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Bold.woff2") format("woff2"), url("../fonts/gotham/Gotham-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Light.woff2") format("woff2"), url("../fonts/gotham/Gotham-Light.woff") format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Medium.woff2") format("woff2"), url("../fonts/gotham/Gotham-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Thin.woff2") format("woff2"), url("../fonts/gotham/Gotham-Thin.woff") format("woff");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}
.btn {
  background-color: #BB0100;
  color: #fff;
}
.btn--shop {
  font-size: 0.875rem;
  font-weight: 500;
  border-radius: 0.125rem;
}
.btn--shop:hover {
  background-color: #fff;
  color: #BB0100;
  transition: 0.4s all ease-in-out;
}
@media (min-width: 576px) {
  .btn--shop {
    padding: 0.625rem 2.3125rem;
  }
}
@media (min-width: 992px) {
  .btn--shop {
    margin-top: 3.5rem;
  }
}
.btn--subscribe {
  font-weight: 500;
  font-size: 0.875rem;
  padding: 0.65625rem 0.9375rem;
  border-radius: 0.1875rem;
  position: absolute;
  right: 0.125rem;
  top: 0.125rem;
}
.btn--subscribe:hover {
  background-color: #111111;
  color: #fff;
  transition: 0.4s all ease-in-out;
}

.owl-dots {
  display: none;
}

.owl-theme .owl-nav {
  position: absolute;
  margin-top: 0.625rem;
  top: 30%;
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-between;
}
@media (min-width: 576px) {
  .owl-theme .owl-nav {
    top: 50%;
  }
}

.owl-prev span {
  font-size: 2.125rem;
  display: inline;
}

.owl-next span {
  font-size: 2.125rem;
  display: inline;
}

.owl-theme .owl-nav [class*=owl-]:hover {
  background: transparent;
  color: #BB0100;
  text-decoration: none;
}

.header__top {
  background-color: #BB0100;
  color: #fff;
}
.header__top h3, .header__top .h3 {
  text-align: center;
  margin: 0;
  padding: 0.75rem 0;
  font-weight: 700;
  font-size: 1rem;
}
.header__top a {
  color: #fff;
}
.header__form {
  position: relative;
  max-width: auto;
}
.header__form .form-control {
  background-color: #EDEDED;
  border-radius: 0.3125rem;
  padding-right: 2.8125rem;
}
.header__form .form-control:focus {
  box-shadow: none;
  border: none;
}
.header__form .form-control::-moz-placeholder {
  font-size: 0.875rem;
  color: #282627;
  font-weight: 300;
}
.header__form .form-control:-ms-input-placeholder {
  font-size: 0.875rem;
  color: #282627;
  font-weight: 300;
}
.header__form .form-control::placeholder {
  font-size: 0.875rem;
  color: #282627;
  font-weight: 300;
}
.header__form button {
  position: absolute;
  right: 0;
  background-color: transparent !important;
}
.header__icons {
  display: inline-flex;
}
.header__icons li {
  padding-left: 1.3125rem;
}
.header__right {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}
@media (min-width: 992px) {
  .header__right {
    position: initial;
    display: flex;
    width: 34%;
    align-items: center;
  }
}

.navbar-expand-lg .navbar-nav .nav-link {
  font-size: 1.25rem;
  font-weight: 500;
  color: #282627;
  padding: 0.625rem 1.54375rem;
  background: antiquewhite;
  border-bottom: 0.0625rem solid #BB0100;
}
.navbar-expand-lg .navbar-nav .nav-link:hover {
  color: #BB0100;
  transition: 0.3s all ease-in-out;
}
@media (min-width: 992px) {
  .navbar-expand-lg .navbar-nav .nav-link {
    padding: 0.625rem 0.9375rem;
    font-size: 0.875rem;
    font-weight: 300;
    color: #282627;
    background-color: #fff;
    border: transparent;
  }
}
@media (min-width: 1200px) {
  .navbar-expand-lg .navbar-nav .nav-link {
    padding: 0.625rem 1.79375rem;
  }
}

.navbar {
  padding: 1.3125rem 0;
}

.navbar-toggler:focus {
  box-shadow: none;
}

.dropdown-toggle::after {
  display: none;
}

.footer {
  background-color: #111111;
  color: #fff;
  padding-top: 2.125rem;
  padding-bottom: 6.375rem;
  position: relative;
}
.footer__form {
  margin-top: 2.0625rem;
  position: relative;
}
.footer__form-input {
  border-radius: 0.25rem;
  width: 100%;
  padding-left: 1.25rem;
  font-size: 1rem;
  font-weight: 400;
  padding: 0.625rem 0;
  outline: #fff auto 0.0625rem;
  padding-left: 2.75rem;
}
.footer__form-input:focus-visible {
  outline: #fff auto 0.0625rem;
}
.footer__form-input::-moz-placeholder {
  font-weight: 500;
  font-size: 0.875rem;
  color: #BB0100;
}
.footer__form-input:-ms-input-placeholder {
  font-weight: 500;
  font-size: 0.875rem;
  color: #BB0100;
}
.footer__form-input::placeholder {
  font-weight: 500;
  font-size: 0.875rem;
  color: #BB0100;
}
.footer__form i {
  color: #BB0100;
  position: absolute;
  top: 0.9375rem;
  left: 1rem;
}
.footer__info {
  font-weight: 300;
  font-size: 0.875rem;
}
.footer__info p {
  margin-top: 2.5rem;
  margin-bottom: 1.25rem;
}
.footer__info a {
  color: #fff;
}
.footer__info ul {
  display: flex;
  -moz-column-gap: 0.675rem;
  column-gap: 0.675rem;
}
.footer__info ul li {
  height: 1.5625rem;
  width: 1.5625rem;
  background: #7F7F7F;
  text-align: center;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.footer__title {
  font-weight: 700;
  font-size: 0.9375rem;
  margin-bottom: 0.75rem;
  margin-top: 1.25rem;
}
@media (min-width: 992px) {
  .footer__title {
    margin-top: 0;
    margin-bottom: 2.25rem;
  }
}
.footer__list {
  line-height: 2.59375rem;
}
.footer__list li a {
  font-weight: 300;
  font-size: 0.875rem;
  color: #fff;
}
.footer__list li a:hover {
  color: #BB0100;
}
.footer__copyright {
  background-color: #BB0100;
  text-align: center;
  padding-top: 1.0625rem;
  padding-bottom: 1.1875rem;
  display: block;
  width: 100%;
  position: absolute;
  bottom: 0;
}
.footer__copyright a {
  color: #fff;
  font-weight: 300;
  font-size: 0.875rem;
}

.container {
  max-width: 78.75rem;
  padding: 0 0.625rem;
  margin: 0 auto;
}

.banner {
  position: relative;
}
.banner__content {
  position: absolute;
  top: 15%;
  left: 1.875rem;
}
@media (min-width: 576px) {
  .banner__content {
    top: 20%;
    left: 3.75rem;
  }
}
@media (min-width: 768px) {
  .banner__content {
    top: 30%;
  }
}
@media (min-width: 992px) {
  .banner__content {
    top: 0;
    padding-top: 3.125rem;
    padding-bottom: 11.1875rem;
  }
}
@media (min-width: 1200px) {
  .banner__content {
    padding-top: 9.4375rem;
  }
}
.banner__content-title, .banner__content h6, .banner__content .h6 {
  font-size: 0.9375rem;
  font-weight: 400;
  color: #111111;
  border-left: 0.25rem solid #111111;
  padding-left: 1.0625rem;
  margin-bottom: 1.125rem;
}
@media (min-width: 576px) {
  .banner__content-title, .banner__content h6, .banner__content .h6 {
    font-size: 1.875rem;
  }
}
@media (min-width: 768px) {
  .banner__content-title, .banner__content h6, .banner__content .h6 {
    font-size: 2.5rem;
    margin-bottom: 2.375rem;
  }
}
.banner__content h6, .banner__content .h6 {
  padding: 0;
  font-size: 1.0625rem;
  border: 0;
  font-weight: 700;
  margin: 0;
}
@media (min-width: 576px) {
  .banner__content h6, .banner__content .h6 {
    margin-bottom: 1.625rem;
  }
}
@media (min-width: 768px) {
  .banner__content h6, .banner__content .h6 {
    font-size: 1.25rem;
  }
}
@media (min-width: 992px) {
  .banner__content h6, .banner__content .h6 {
    margin-bottom: 3.5rem;
  }
}
.banner__content h1, .banner__content .h1 {
  font-weight: 300;
  font-size: 1.875rem;
  color: #111111;
}
@media (min-width: 768px) {
  .banner__content h1, .banner__content .h1 {
    font-size: 2.5rem;
  }
}
@media (min-width: 992px) {
  .banner__content h1, .banner__content .h1 {
    font-size: 4.375rem;
  }
}

.dept__wrapper {
  padding: 0 -0.5625rem;
}
.dept__card {
  display: flex;
  justify-content: center;
  margin-bottom: 1.25rem;
  padding: 0 0.5625rem;
}
.dept__content {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  border: 0.03125rem solid #BFBFBF;
  height: 11.75rem;
  width: 11.75rem;
  border-radius: 0.1875rem;
  transition: transform 0.6s;
}
.dept__content img {
  height: 5.3125rem;
}
.dept__content p {
  margin-top: 1.25rem;
  margin-bottom: 0;
  color: #7F7F7F;
}
.dept__content svg path {
  fill: #7F7F7F;
}
.dept__content:hover {
  background-color: #BB0100;
  transform: scale(1.1);
  color: #fff;
}
.dept__content:hover p {
  color: #fff;
}
.dept__content:hover svg path {
  fill: #fff;
}

.trending__content {
  padding: 0 0.5rem;
  margin-bottom: 1.5rem;
}
.trending__card {
  width: 14.5rem;
  background-color: transparent;
  border: none;
  border-radius: 0;
}
.trending__card a {
  padding: 0.9375rem 0 0 0;
}
.trending__card .card-title {
  font-size: 0.875rem;
  font-weight: 500;
  color: #4f4f4f;
  margin-bottom: 0.25rem;
}
.trending__card .card-text {
  font-size: 0.875rem;
  font-weight: 500;
  color: #282627;
}

.furniture__content {
  padding: 0 0.4375rem;
  margin-bottom: 1.5rem;
}
.furniture__card {
  width: auto;
  border: none;
  border-radius: 0;
}
@media (min-width: 992px) {
  .furniture__card {
    width: 24.9375rem;
  }
}
.furniture__card-body {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #EDEDED;
  justify-content: space-between;
  padding: 0.875rem 1.375rem;
}
.furniture__card-body div .card-title {
  font-size: 1.25rem;
  font-weight: 500;
  color: #4f4f4f;
}
.furniture__card-body div .card-text {
  font-size: 1.25rem;
  font-weight: 500;
  color: #BB0100;
}
.furniture__card .btn--shop {
  margin-top: 0;
}
.furniture__card .btn--shop:hover {
  background-color: #BFBFBF;
}

.blog__card {
  width: 24.9375rem;
  border: none;
}
.blog__card-body {
  text-align: center;
  padding: 1.5rem 0;
  border-bottom: 0.0625rem solid #BFBFBF;
  border-left: 0.0625rem solid #BFBFBF;
  border-right: 0.0625rem solid #BFBFBF;
}
.blog__card-body div {
  border-bottom: 0.0625rem solid #BFBFBF;
}
.blog__card-body h6, .blog__card-body .h6 {
  color: #BB0100;
  font-size: 0.75rem;
  font-weight: 500;
}
.blog__card-body h5, .blog__card-body .h5 {
  color: #282627;
  font-size: 1.25rem;
  font-weight: 500;
  margin-top: 0.4375rem;
}
.blog__card-body p {
  font-size: 0.875rem;
  font-weight: 300;
  color: #000;
  margin-top: 2.5rem;
  margin-bottom: 1.375rem;
}
.blog__card-link {
  font-weight: 500;
  font-size: 0.875rem;
  color: #3333;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
