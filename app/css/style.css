@charset "UTF-8";
:root {
  --bs-blue: #0d6efd;
  --bs-indigo: #6610f2;
  --bs-purple: #6f42c1;
  --bs-pink: #d63384;
  --bs-red: #dc3545;
  --bs-orange: #fd7e14;
  --bs-yellow: #ffc107;
  --bs-green: #198754;
  --bs-teal: #20c997;
  --bs-cyan: #0dcaf0;
  --bs-black: #000;
  --bs-white: #fff;
  --bs-gray: #6c757d;
  --bs-gray-dark: #343a40;
  --bs-gray-100: #f8f9fa;
  --bs-gray-200: #e9ecef;
  --bs-gray-300: #dee2e6;
  --bs-gray-400: #ced4da;
  --bs-gray-500: #adb5bd;
  --bs-gray-600: #6c757d;
  --bs-gray-700: #495057;
  --bs-gray-800: #343a40;
  --bs-gray-900: #212529;
  --bs-primary: #0d6efd;
  --bs-secondary: #6c757d;
  --bs-success: #198754;
  --bs-info: #0dcaf0;
  --bs-warning: #ffc107;
  --bs-danger: #dc3545;
  --bs-light: #f8f9fa;
  --bs-dark: #212529;
  --bs-primary-rgb: 13, 110, 253;
  --bs-secondary-rgb: 108, 117, 125;
  --bs-success-rgb: 25, 135, 84;
  --bs-info-rgb: 13, 202, 240;
  --bs-warning-rgb: 255, 193, 7;
  --bs-danger-rgb: 220, 53, 69;
  --bs-light-rgb: 248, 249, 250;
  --bs-dark-rgb: 33, 37, 41;
  --bs-white-rgb: 255, 255, 255;
  --bs-black-rgb: 0, 0, 0;
  --bs-body-color-rgb: 17, 17, 17;
  --bs-body-bg-rgb: 0, 0, 0;
  --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
  --bs-body-font-family: var(--bs-font-sans-serif);
  --bs-body-font-size: 1rem;
  --bs-body-font-weight: 400;
  --bs-body-line-height: 1.5;
  --bs-body-color: #111;
  --bs-body-bg: #000;
  --bs-border-width: 1px;
  --bs-border-style: solid;
  --bs-border-color: #dee2e6;
  --bs-border-color-translucent: rgba(0, 0, 0, 0.175);
  --bs-border-radius: 0.375rem;
  --bs-border-radius-sm: 0.25rem;
  --bs-border-radius-lg: 0.5rem;
  --bs-border-radius-xl: 1rem;
  --bs-border-radius-2xl: 2rem;
  --bs-border-radius-pill: 50rem;
  --bs-link-color: #0d6efd;
  --bs-link-hover-color: #0a58ca;
  --bs-code-color: #d63384;
  --bs-highlight-bg: #fff3cd;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

@media (prefers-reduced-motion: no-preference) {
  :root {
    scroll-behavior: smooth;
  }
}

body {
  margin: 0;
  font-family: var(--bs-body-font-family);
  font-size: var(--bs-body-font-size);
  font-weight: var(--bs-body-font-weight);
  line-height: var(--bs-body-line-height);
  color: var(--bs-body-color);
  text-align: var(--bs-body-text-align);
  background-color: var(--bs-body-bg);
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

hr {
  margin: 1rem 0;
  color: inherit;
  border: 0;
  border-top: 1px solid;
  opacity: 0.25;
}

h6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 500;
  line-height: 1.2;
}

h1, .h1 {
  font-size: calc(1.375rem + 1.5vw);
}
@media (min-width: 1200px) {
  h1, .h1 {
    font-size: 2.5rem;
  }
}

h2, .h2 {
  font-size: calc(1.325rem + 0.9vw);
}
@media (min-width: 1200px) {
  h2, .h2 {
    font-size: 2rem;
  }
}

h3, .h3 {
  font-size: calc(1.3rem + 0.6vw);
}
@media (min-width: 1200px) {
  h3, .h3 {
    font-size: 1.75rem;
  }
}

h4, .h4 {
  font-size: calc(1.275rem + 0.3vw);
}
@media (min-width: 1200px) {
  h4, .h4 {
    font-size: 1.5rem;
  }
}

h5, .h5 {
  font-size: 1.25rem;
}

h6, .h6 {
  font-size: 1rem;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul {
  padding-left: 2rem;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: 700;
}

dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: bolder;
}

small, .small {
  font-size: 0.875em;
}

mark, .mark {
  padding: 0.1875em;
  background-color: var(--bs-highlight-bg);
}

sub,
sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

a {
  color: var(--bs-link-color);
  text-decoration: underline;
}
a:hover {
  color: var(--bs-link-hover-color);
}

a:not([href]):not([class]), a:not([href]):not([class]):hover {
  color: inherit;
  text-decoration: none;
}

pre,
code,
kbd,
samp {
  font-family: var(--bs-font-monospace);
  font-size: 1em;
}

pre {
  display: block;
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  font-size: 0.875em;
}
pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}

code {
  font-size: 0.875em;
  color: var(--bs-code-color);
  word-wrap: break-word;
}
a > code {
  color: inherit;
}

kbd {
  padding: 0.1875rem 0.375rem;
  font-size: 0.875em;
  color: var(--bs-body-bg);
  background-color: var(--bs-body-color);
  border-radius: 0.25rem;
}
kbd kbd {
  padding: 0;
  font-size: 1em;
}

figure {
  margin: 0 0 1rem;
}

img,
svg {
  vertical-align: middle;
}

table {
  caption-side: bottom;
  border-collapse: collapse;
}

caption {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: #6c757d;
  text-align: left;
}

th {
  text-align: inherit;
  text-align: -webkit-match-parent;
}

thead,
tbody,
tfoot,
tr,
td,
th {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}

label {
  display: inline-block;
}

button {
  border-radius: 0;
}

button:focus:not(:focus-visible) {
  outline: 0;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
select {
  text-transform: none;
}

[role=button] {
  cursor: pointer;
}

select {
  word-wrap: normal;
}
select:disabled {
  opacity: 1;
}

[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator {
  display: none !important;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}
button:not(:disabled),
[type=button]:not(:disabled),
[type=reset]:not(:disabled),
[type=submit]:not(:disabled) {
  cursor: pointer;
}

::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

textarea {
  resize: vertical;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  float: left;
  width: 100%;
  padding: 0;
  margin-bottom: 0.5rem;
  font-size: calc(1.275rem + 0.3vw);
  line-height: inherit;
}
@media (min-width: 1200px) {
  legend {
    font-size: 1.5rem;
  }
}
legend + * {
  clear: left;
}

::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}

::-webkit-inner-spin-button {
  height: auto;
}

[type=search] {
  outline-offset: -2px;
  -webkit-appearance: textfield;
}

/* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
  direction: ltr;
}
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-color-swatch-wrapper {
  padding: 0;
}

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

::file-selector-button {
  font: inherit;
  -webkit-appearance: button;
}

output {
  display: inline-block;
}

iframe {
  border: 0;
}

summary {
  display: list-item;
  cursor: pointer;
}

progress {
  vertical-align: baseline;
}

[hidden] {
  display: none !important;
}

.lead {
  font-size: 1.25rem;
  font-weight: 300;
}

.display-1 {
  font-size: calc(1.625rem + 4.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-1 {
    font-size: 5rem;
  }
}

.display-2 {
  font-size: calc(1.575rem + 3.9vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-2 {
    font-size: 4.5rem;
  }
}

.display-3 {
  font-size: calc(1.525rem + 3.3vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-3 {
    font-size: 4rem;
  }
}

.display-4 {
  font-size: calc(1.475rem + 2.7vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-4 {
    font-size: 3.5rem;
  }
}

.display-5 {
  font-size: calc(1.425rem + 2.1vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-5 {
    font-size: 3rem;
  }
}

.display-6 {
  font-size: calc(1.375rem + 1.5vw);
  font-weight: 300;
  line-height: 1.2;
}
@media (min-width: 1200px) {
  .display-6 {
    font-size: 2.5rem;
  }
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
}

.list-inline-item {
  display: inline-block;
}
.list-inline-item:not(:last-child) {
  margin-right: 0.5rem;
}

.initialism {
  font-size: 0.875em;
  text-transform: uppercase;
}

.blockquote {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}
.blockquote > :last-child {
  margin-bottom: 0;
}

.blockquote-footer {
  margin-top: -1rem;
  margin-bottom: 1rem;
  font-size: 0.875em;
  color: #6c757d;
}
.blockquote-footer::before {
  content: "— ";
}

@font-face {
  font-family: "Luma-Icons";
  src: url("../fonts/icomoon/Luma-Icons.eot?i3ey36");
  src: url("../fonts/icomoon/Luma-Icons.eot?i3ey36#iefix") format("embedded-opentype"), url("../fonts/icomoon/Luma-Icons.ttf?i3ey36") format("truetype"), url("../fonts/icomoon/Luma-Icons.woff?i3ey36") format("woff"), url("../fonts/icomoon/Luma-Icons.svg?i3ey36#Luma-Icons") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}
[class^=icon-], [class*=" icon-"] {
  font-family: "Luma-Icons" !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-cart1:before {
  content: "\e901";
}

.icon-chair:before {
  content: "\e902";
}

.icon-cupboard:before {
  content: "\e903";
}

.icon-home:before {
  content: "\e904";
}

.icon-lamp:before {
  content: "\e905";
}

.icon-search1:before {
  content: "\e906";
}

.icon-sofa:before {
  content: "\e907";
}

.icon-star1:before {
  content: "\e908";
}

.icon-table:before {
  content: "\e909";
  color: #7f7f7f;
}

.icon-wish:before {
  content: "\e90a";
}

.icon-home1:before {
  content: "\e90b";
}

.icon-right-arrow:before {
  content: "\e90c";
}

.icon-twiter:before {
  content: "\e90d";
  color: #fff;
}

.icon-instagram:before {
  content: "\e90e";
  color: #fff;
}

.icon-facebook:before {
  content: "\e90f";
  color: #fff;
}

.icon-location:before {
  content: "\e900";
}

.icon-private:before {
  content: "\e629";
}

.icon-gift-registry:before {
  content: "\e62b";
}

.icon-present:before {
  content: "\e62a";
}

.icon-star-empty:before {
  content: "\e625";
}

.icon-download:before {
  content: "\e626";
}

.icon-undo:before {
  content: "\e628";
}

.icon-print:before {
  content: "\e624";
}

.icon-help:before {
  content: "\e623";
}

.icon-success:before {
  content: "\e60e";
}

.icon-error:before {
  content: "\e61f";
}

.icon-account:before {
  content: "\e627";
}

.icon-edit:before {
  content: "\e601";
}

.icon-wishlist-full:before {
  content: "\e600";
}

.icon-warning:before {
  content: "\e602";
}

.icon-update:before {
  content: "\e603";
}

.icon-trash:before {
  content: "\e604";
}

.icon-star:before {
  content: "\e605";
}

.icon-settings:before {
  content: "\e606";
}

.icon-pointer-down:before {
  content: "\e607";
}

.icon-next:before {
  content: "\e608";
}

.icon-menu:before {
  content: "\e609";
}

.icon-location1:before {
  content: "\e60a";
}

.icon-list:before {
  content: "\e60b";
}

.icon-info:before {
  content: "\e60c";
}

.icon-grid:before {
  content: "\e60d";
}

.icon-minus:before {
  content: "\e60f";
}

.icon-checkmark:before {
  content: "\e610";
}

.icon-cart:before {
  content: "\e611";
}

.icon-calendar:before {
  content: "\e612";
}

.icon-arrow-up:before {
  content: "\e613";
}

.icon-arrow-down:before {
  content: "\e614";
}

.icon-search:before {
  content: "\e615";
}

.icon-remove:before {
  content: "\e616";
}

.icon-prev:before {
  content: "\e617";
}

.icon-pointer-up:before {
  content: "\e618";
}

.icon-pointer-right:before {
  content: "\e619";
}

.icon-pointer-left:before {
  content: "\e61a";
}

.icon-flag:before {
  content: "\e61b";
}

.icon-expand:before {
  content: "\e61c";
}

.icon-envelope:before {
  content: "\e61d";
}

.icon-compare-full:before {
  content: "\e61e";
}

.icon-comment:before {
  content: "\e620";
}

.icon-up:before {
  content: "\e621";
}

.icon-down:before {
  content: "\e622";
}

.section {
  margin: 1.875rem 0;
}
@media (min-width: 768px) {
  .section {
    margin: 50px 0;
  }
}
@media (min-width: 1200px) {
  .section {
    margin: 100px 0;
  }
}
.section__heading {
  text-align: center;
  position: relative;
  z-index: 0;
  margin-bottom: 66px;
}
.section__heading::after {
  content: "";
  position: absolute;
  bottom: -20px;
  right: 0;
  left: 0;
  margin: 0 auto;
  width: 142px;
  border: 1px solid #000;
}
.section__heading h2, .section__heading .h2 {
  font-size: 1.875rem;
  font-weight: 700;
  color: #282627;
}
.section__heading p {
  font-weight: 500;
  color: #7F7F7F;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
}

body {
  width: 100%;
  font-weight: 400;
  font-family: "Gotham";
  background-color: transparent;
}

a, li {
  text-decoration: none;
  list-style-type: none;
  list-style: none;
}

.row {
  width: 100%;
  margin: 0;
}

video {
  width: 100%;
  height: auto;
}

ul, ol {
  margin: 0;
  padding: 0;
}

h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6, p {
  margin: 0;
}

@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Black.woff2") format("woff2"), url("../fonts/gotham/Gotham-Black.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Bold.woff2") format("woff2"), url("../fonts/gotham/Gotham-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Light.woff2") format("woff2"), url("../fonts/gotham/Gotham-Light.woff") format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Medium.woff2") format("woff2"), url("../fonts/gotham/Gotham-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Gotham";
  src: url("../fonts/gotham/Gotham-Thin.woff2") format("woff2"), url("../fonts/gotham/Gotham-Thin.woff") format("woff");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}
.card {
  border: none;
}

.modal-dialog {
  background-color: #BB0100;
}

.btn-close {
  background: transparent url("../images/svg_icons/delete-button.svg") center/1em auto no-repeat;
}

.btn {
  background-color: #BB0100;
  color: #fff;
  font-weight: 500;
}
.btn--search:active {
  border: none !important;
  display: block;
}
.btn--search span {
  font-size: 1.25rem;
  color: #282627;
}
.btn--search:hover span {
  font-size: 1.25rem;
  color: #282627;
}
.btn--search:hover:hover span {
  color: #BB0100;
}
.btn--shop {
  font-size: 0.875rem;
  border-radius: 0.125rem;
}
.btn--shop:hover {
  background-color: #fff;
  color: #BB0100;
  transition: 0.4s all ease-in-out;
}
@media (min-width: 576px) {
  .btn--shop {
    padding: 0.625rem 2.3125rem;
  }
}
@media (min-width: 992px) {
  .btn--shop {
    margin-top: 3.5rem;
  }
}
.btn--subscribe {
  font-size: 0.875rem;
  padding: 0.65625rem 0.9375rem;
  border-radius: 0.1875rem;
  position: absolute;
  right: 0.1875rem;
  top: 0.1875rem;
  border: 0;
}
.btn--subscribe:hover {
  background-color: #111111;
  color: #fff;
  transition: 0.4s all ease-in-out;
}
.btn--time {
  width: 16.3125rem;
  border-radius: 0.125rem;
  font-size: 1rem;
  text-align: center;
  padding: 1.25rem 0;
  background-color: #BB0100;
  color: #fff;
}
.btn--shopnow {
  font-size: 0.875rem;
  font-weight: 500;
  color: #fff;
  text-decoration: underline;
  display: inline;
}
.btn--shopnow:hover {
  -webkit-text-decoration: wavy;
  text-decoration: wavy;
  color: blue;
  transform: scale(1.03);
}

.owl-theme .owl-nav {
  position: absolute;
  margin-top: 0.625rem;
  top: 30%;
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-between;
}
@media (min-width: 576px) {
  .owl-theme .owl-nav {
    top: 50%;
  }
}

.owl-prev span {
  font-size: 2.125rem;
  display: inline;
}

.owl-next span {
  font-size: 2.125rem;
  display: inline;
}

.owl-theme .owl-nav [class*=owl-]:hover {
  background: transparent;
  color: #BB0100;
  text-decoration: none;
}

.header__top {
  background-color: #BB0100;
  color: #fff;
}
.header__top h3, .header__top .h3 {
  text-align: center;
  margin: 0;
  padding: 0.75rem 0;
  font-weight: 700;
  font-size: 1rem;
}
.header__top a {
  color: #fff;
}
.header__form {
  position: relative;
  max-width: auto;
}
.header__form .form-control {
  background-color: #EDEDED;
  border-radius: 0.3125rem;
  padding-right: 2.8125rem;
  border: 1px solid transparent;
}
.header__form .form-control:focus {
  box-shadow: 0px 0px 3px 0px #bb0100;
}
.header__form .form-control::-moz-placeholder {
  font-size: 0.875rem;
  color: #282627;
  font-weight: 300;
}
.header__form .form-control:-ms-input-placeholder {
  font-size: 0.875rem;
  color: #282627;
  font-weight: 300;
}
.header__form .form-control::placeholder {
  font-size: 0.875rem;
  color: #282627;
  font-weight: 300;
}
.header__form button {
  position: absolute;
  right: 0;
  background-color: transparent !important;
}
.header__icons {
  display: inline-flex;
}
.header__icons li {
  padding-left: 1.3125rem;
}
.header__icons li a span {
  font-size: 1.25rem;
  color: #282627;
}
.header__icons li a:hover span {
  color: #BB0100;
}
.header__right {
  display: flex;
  justify-content: center;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}
@media (min-width: 992px) {
  .header__right {
    position: initial;
    display: flex;
    width: 34%;
    align-items: center;
  }
}

.navbar-expand-lg .navbar-nav .nav-link {
  font-size: 1.25rem;
  font-weight: 500;
  color: #282627;
  padding: 0.625rem 1.54375rem;
  background: antiquewhite;
  border-bottom: 0.0625rem solid #BB0100;
}
.navbar-expand-lg .navbar-nav .nav-link:hover {
  color: #BB0100;
  transition: 0.3s all ease-in-out;
}
@media (min-width: 992px) {
  .navbar-expand-lg .navbar-nav .nav-link {
    padding: 0.625rem 0.9375rem;
    font-size: 0.875rem;
    font-weight: 300;
    color: #282627;
    background-color: #fff;
    border: transparent;
  }
}
@media (min-width: 1200px) {
  .navbar-expand-lg .navbar-nav .nav-link {
    padding: 0.625rem 1.79375rem;
  }
}

.navbar {
  padding: 1.3125rem 0;
}
.navbar-toggler:focus {
  box-shadow: none;
}

.dropdown-toggle::after {
  display: none;
}

.footer {
  background-color: #111111;
  color: #fff;
  padding-top: 2.125rem;
  padding-bottom: 6.375rem;
  position: relative;
}
.footer__form {
  margin-top: 2.0625rem;
  position: relative;
}
.footer__form-input {
  border-radius: 0.25rem;
  width: 100%;
  padding-left: 1.25rem;
  font-size: 1rem;
  font-weight: 400;
  padding: 0.625rem 0;
  padding-left: 2.75rem;
  padding-right: 7.6875rem;
  height: 3rem;
  border-color: transparent;
}
.footer__form-input:focus-visible {
  outline: 0;
}
.footer__form-input:focus {
  box-shadow: 0 0 0 2px #BB0100;
}
.footer__form-input::-moz-placeholder {
  font-weight: 500;
  font-size: 0.875rem;
  color: #BB0100;
}
.footer__form-input:-ms-input-placeholder {
  font-weight: 500;
  font-size: 0.875rem;
  color: #BB0100;
}
.footer__form-input::placeholder {
  font-weight: 500;
  font-size: 0.875rem;
  color: #BB0100;
}
.footer__form i {
  color: #BB0100;
  position: absolute;
  top: 0.9375rem;
  left: 1rem;
}
.footer__info {
  font-weight: 300;
  font-size: 0.875rem;
}
.footer__info p {
  margin-top: 2.5rem;
  margin-bottom: 1.25rem;
}
.footer__info a {
  color: #fff;
}
.footer__info ul {
  display: flex;
  -moz-column-gap: 0.675rem;
  column-gap: 0.675rem;
}
.footer__info ul li {
  height: 1.5625rem;
  width: 1.5625rem;
  background: #7F7F7F;
  text-align: center;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.footer__info ul li:hover {
  background-color: #BB0100;
  transform: scale(1.1);
}
@media (min-width: 1200px) {
  .footer__categories {
    display: inline-flex;
    justify-content: center;
  }
}
.footer__title {
  font-weight: 700;
  font-size: 0.9375rem;
  margin-bottom: 0.75rem;
  margin-top: 1.25rem;
}
@media (min-width: 992px) {
  .footer__title {
    margin-top: 0;
    margin-bottom: 2.25rem;
  }
}
.footer__list {
  line-height: 2.59375rem;
}
.footer__list li a {
  font-weight: 300;
  font-size: 0.875rem;
  color: #fff;
}
.footer__list li a:hover {
  color: #BB0100;
  text-decoration: underline;
  transform: scale(1.1);
}
.footer__copyright {
  background-color: #BB0100;
  text-align: center;
  padding-top: 1.0625rem;
  padding-bottom: 1.1875rem;
  display: block;
  width: 100%;
  position: absolute;
  bottom: 0;
}
.footer__copyright a {
  color: #fff;
  font-weight: 300;
  font-size: 0.875rem;
}

.container {
  max-width: 78.75rem;
  padding: 0 0.625rem;
  margin: 0 auto;
}

.banner {
  position: relative;
}
.banner__content {
  position: absolute;
  top: 15%;
  left: 1.875rem;
}
@media (min-width: 576px) {
  .banner__content {
    top: 20%;
    left: 3.75rem;
  }
}
@media (min-width: 768px) {
  .banner__content {
    top: 30%;
  }
}
@media (min-width: 992px) {
  .banner__content {
    top: 0;
    padding-top: 3.125rem;
    padding-bottom: 11.1875rem;
  }
}
@media (min-width: 1200px) {
  .banner__content {
    padding-top: 9.4375rem;
  }
}
.banner__content-title, .banner__content h6, .banner__content .h6 {
  font-size: 0.9375rem;
  font-weight: 400;
  color: #111111;
  border-left: 0.25rem solid #111111;
  padding-left: 1.0625rem;
  margin-bottom: 1.125rem;
}
@media (min-width: 576px) {
  .banner__content-title, .banner__content h6, .banner__content .h6 {
    font-size: 1.875rem;
  }
}
@media (min-width: 768px) {
  .banner__content-title, .banner__content h6, .banner__content .h6 {
    font-size: 2.5rem;
    margin-bottom: 2.375rem;
  }
}
.banner__content h6, .banner__content .h6 {
  padding: 0;
  font-size: 1.0625rem;
  border: 0;
  font-weight: 700;
  margin: 0;
}
@media (min-width: 576px) {
  .banner__content h6, .banner__content .h6 {
    margin-bottom: 1.625rem;
  }
}
@media (min-width: 768px) {
  .banner__content h6, .banner__content .h6 {
    font-size: 1.25rem;
  }
}
@media (min-width: 992px) {
  .banner__content h6, .banner__content .h6 {
    margin-bottom: 3.5rem;
  }
}
.banner__content h1, .banner__content .h1 {
  font-weight: 300;
  font-size: 1.875rem;
  color: #111111;
}
@media (min-width: 768px) {
  .banner__content h1, .banner__content .h1 {
    font-size: 2.5rem;
  }
}
@media (min-width: 992px) {
  .banner__content h1, .banner__content .h1 {
    font-size: 4.375rem;
  }
}

.dept__wrapper {
  padding: 0 -0.5625rem;
}
.dept__card {
  display: flex;
  justify-content: center;
  margin-bottom: 1.25rem;
  padding: 0 0.5625rem;
}
.dept__content {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  border: 0.03125rem solid #BFBFBF;
  height: 11.75rem;
  width: 11.75rem;
  transition: transform 0.6s;
}
.dept__content img {
  height: 5.3125rem;
}
.dept__content p {
  margin-top: 1.25rem;
  margin-bottom: 0;
  color: #7F7F7F;
}
.dept__content svg path {
  fill: #7F7F7F;
}
.dept__content:hover {
  background-color: #BB0100;
  transform: scale(1.1);
  color: #fff;
}
.dept__content:hover p {
  color: #fff;
}
.dept__content:hover svg path {
  fill: #fff;
}

.trending__content {
  padding: 0 0.5rem;
  margin-bottom: 1.5rem;
}
.trending__card {
  width: 14.5rem;
  background-color: transparent;
  border: none;
  border-radius: 0;
}
.trending__card:hover {
  transform: scale(1.07);
  transition: 0.4s all ease-in-out;
}
.trending__card a {
  padding: 0.9375rem 0 0 0;
}
.trending__card .card-body:hover h5, .trending__card .card-body:hover .h5 {
  color: #BB0100;
}
.trending__card .card-title {
  font-size: 0.875rem;
  font-weight: 500;
  color: #4f4f4f;
  margin-bottom: 0.25rem;
}
.trending__card .card-text {
  font-size: 0.875rem;
  font-weight: 500;
  color: #282627;
}

.furniture__content {
  padding: 0 0.4375rem;
  margin-bottom: 1.5rem;
}
.furniture__card {
  width: auto;
  border: none;
  border-radius: 0;
}
@media (min-width: 992px) {
  .furniture__card {
    width: 24.9375rem;
  }
}
.furniture__card a img {
  width: 100%;
}
@media (min-width: 576px) {
  .furniture__card a img {
    width: initial;
  }
}
.furniture__card-body {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #EDEDED;
  justify-content: space-between;
  padding: 0.875rem 1.375rem;
}
.furniture__card-title, .offer__card-desc .card-title {
  font-size: 1.25rem;
  font-weight: 500;
  color: #4f4f4f;
}
.furniture__card-text, .offer__card-desc .card-text {
  font-size: 1.25rem;
  font-weight: 500;
  color: #BB0100;
}
.furniture__card-link {
  margin-top: 0;
}
.furniture__card-link:hover {
  background-color: #000;
  color: #fff;
}
.furniture__card:hover {
  transform: scale(1.03);
  transition: 0.4s all ease-in;
}
.furniture__desc a:hover h5, .furniture__desc a:hover .h5 {
  color: #BB0100;
}

.offer {
  position: relative;
}
.offer__heading {
  background-color: #fff;
  width: 18.375rem;
  align-items: center;
  padding: 0 0.375rem;
  position: absolute;
  top: -15px;
  left: 0;
  right: 0;
  margin: 0 auto;
}
@media (min-width: 768px) {
  .offer__heading {
    display: flex;
    justify-content: space-between;
    margin: initial;
    flex-wrap: wrap;
    width: 35.375rem;
    align-items: center;
    padding: 0 0.75rem;
    top: -2rem;
    right: initial;
    left: 6.125rem;
  }
}
.offer__heading h2, .offer__heading .h2 {
  font-size: 1.875rem;
  font-weight: 700;
  color: #282627;
  text-transform: uppercase;
}
.offer__border {
  border: 1px solid #E91B1A;
  padding-top: 4.375rem;
  padding-bottom: 2.875rem;
}
.offer__content {
  margin-top: 2.8125rem;
  width: 100%;
}
@media (min-width: 576px) {
  .offer__content {
    width: auto;
  }
}
@media (min-width: 1200px) {
  .offer__content {
    margin-top: 1.25rem;
    padding: 0 2.125rem;
  }
}
.offer__card {
  border: none;
}
.offer__card:hover {
  transform: scale(1.02);
  transition: 0.4s all ease-in-out;
}
.offer__card-desc .card-title:hover {
  color: #BB0100;
}
.offer__card a img {
  width: 100%;
  margin: 1.4375rem 0;
}
@media (min-width: 576px) {
  .offer__card a img {
    width: initial;
  }
}
.offer__card-progress {
  border-radius: 0.3125rem;
  background-color: #EDEDED;
  height: 0.375rem;
}
.offer__card-progress-bar {
  background-color: #5DBE6B;
  border-radius: 0.3125rem;
  width: 37%;
}
.offer__card-ratings {
  display: flex;
  justify-content: space-between;
  margin-top: 1.125rem;
  align-items: center;
}
.offer__card-ratings h3, .offer__card-ratings .h3 {
  font-size: 0.875rem;
  font-weight: 500;
  color: #4f4f4f;
}
.offer__card-ratings ul {
  display: inline-flex;
  gap: 0.1875rem;
}
.offer__card-ratings ul li i {
  color: #BFBFBF;
  font-size: 1.25rem;
}

.fast {
  margin-top: 6.25rem;
}
.fast__left {
  position: relative;
  color: #fff;
  margin-bottom: 1.25rem;
}
@media (min-width: 576px) {
  .fast__left {
    margin-bottom: 1.875rem;
  }
}
.fast__left-img {
  width: 100%;
}
@media (min-width: 768px) {
  .fast__left-img {
    width: initial;
  }
}
.fast__left-content {
  padding: 0.5rem 0.5rem 0.5rem 0.5rem;
  position: absolute;
  top: 0;
  left: 0;
  background-image: url("../images/rectangle-bg.png");
  background-size: cover;
  background-repeat: no-repeat;
}
@media (min-width: 576px) {
  .fast__left-content {
    padding: 2.5625rem 0.625rem 1.625rem 2.875rem;
  }
}
@media (min-width: 768px) {
  .fast__left-content {
    padding: 2.5625rem 9.375rem 1.625rem 2.875rem;
    top: 6.5rem;
    left: -1.125rem;
  }
}
.fast__left-content p {
  font-size: 0.875rem;
  font-weight: 500;
}
.fast__left-content h3, .fast__left-content .h3 {
  font-size: 2.5rem;
  font-weight: 500;
  margin-bottom: 0.3125rem;
}
.fast__left-content h5, .fast__left-content .h5 {
  font-size: 1.125rem;
  font-weight: 500;
  margin-bottom: 0.625rem;
}
.fast__left-content img {
  position: absolute;
  top: -0.8125rem;
  left: 0;
  z-index: -1;
}
.fast__right {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}
@media (min-width: 576px) {
  .fast__right {
    justify-content: space-evenly;
  }
}
.fast__card {
  display: inline-block;
  position: relative;
  margin-bottom: 1.25rem;
}
@media (min-width: 576px) {
  .fast__card {
    margin-bottom: 1.875rem;
  }
}
.fast__card-content h4, .fast__card-content .h4 {
  font-weight: 700;
  font-size: 1.25rem;
  color: #4f4f4f;
  margin-top: 0.5rem;
}
.fast__card-content h4:hover, .fast__card-content .h4:hover {
  color: #BB0100;
}
.fast__card-content p {
  color: #BFBFBF;
  font-size: 0.875rem;
  font-weight: 700;
}
.fast__card-off {
  font-size: 0.875rem;
  font-weight: 500;
  background-color: #BB0100;
  width: 3.125rem;
  height: 3.125rem;
  position: absolute;
  top: 0.9375rem;
  right: 0.9375rem;
  padding-top: 0.25rem;
}
.fast__card-off p {
  font-size: 0.875rem;
  font-weight: 500;
  color: #fff;
  text-align: center;
}
.fast__card:hover {
  transform: scale(1.05);
  transition: 0.5s all ease-in-out;
}
.fast__primary {
  margin-bottom: 1.5625rem;
}

.bestsell__wrapper {
  gap: 1.625rem;
  justify-content: space-around;
}
@media (min-width: 1200px) {
  .bestsell__wrapper {
    justify-content: space-between;
    gap: 1.625rem;
  }
}
.bestsell__card {
  border: 0;
  flex-direction: row;
  align-items: center;
  flex-wrap: wrap;
  justify-content: center;
}
.bestsell__card-img:hover {
  transform: scale(0.97);
  transition: 0.5s all ease-in-out;
}
.bestsell__card-desc a {
  font-size: 0.875rem;
  font-weight: 500;
  color: #282627;
  margin-top: 19px;
  margin-bottom: 0.1875rem;
}
.bestsell__card-desc a:hover {
  color: #BB0100;
}
.bestsell__card-price {
  font-size: 0.875rem;
  font-weight: 500;
  color: #282627;
}
.bestsell__card-price span {
  text-decoration: line-through;
  color: #BFBFBF;
}
.bestsell__card-body {
  padding-left: 0.75rem;
}
.bestsell__card-body-star {
  width: 70%;
}
.bestsell__card-body-star::before {
  content: "\f005" "\f005" "\f005" "\f005" "\f005";
  position: relative;
  display: block;
  line-height: 16px;
  font: var(--fa-font-solid);
  font-weight: 300;
  letter-spacing: 7px;
  color: red;
}
.bestsell__card-body ul {
  display: inline-flex;
  gap: 0.1875rem;
}
.bestsell__card-body ul li i {
  color: #BFBFBF;
  font-size: 1.25rem;
}
.bestsell__card-body ol {
  display: inline-flex;
  margin-top: 1.3125rem;
}
.bestsell__card-body ol li a {
  border: 0.5px solid #BFBFBF;
  padding: 0.625rem 0.6875rem;
  display: flex;
  justify-content: center;
  align-items: center;
}
.bestsell__card-body ol li a span {
  width: 1.25rem;
  color: #282627;
  font-size: 1.25rem;
}
.bestsell__card-body ol li a:hover {
  background-color: #000;
  border-color: #fff;
}
.bestsell__card-body ol li a:hover span {
  color: #fff;
}
.bestsell__card-body ol li:last-child {
  margin-left: 0.5625rem;
}

.arrival {
  color: #fff;
}
.arrival__content {
  gap: 1.25rem;
}
.arrival__title {
  font-weight: 500;
  font-size: 0.75rem;
  margin-bottom: 0.3125rem;
}
.arrival__text {
  font-weight: 500;
  font-size: 1.25rem;
  margin-bottom: 1.5rem;
}
.arrival__sofa {
  min-height: 28.375rem;
  background-image: url("../images/arrival_sofa.png");
  background-size: cover;
  background-repeat: no-repeat;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  width: auto;
  background-position: center;
}
@media (min-width: 1200px) {
  .arrival__sofa {
    width: 19.6875rem;
  }
}
.arrival__home {
  min-height: 28.375rem;
  background-image: url("../images/arrival_lamp.png");
  background-size: cover;
  background-repeat: no-repeat;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  width: auto;
}
@media (min-width: 1200px) {
  .arrival__home {
    width: 35.625rem;
  }
}
.arrival__new {
  min-height: 28.375rem;
  background-image: url("../images/arrival_nature.png");
  background-size: cover;
  background-repeat: no-repeat;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  width: auto;
}
@media (min-width: 1200px) {
  .arrival__new {
    width: 19.6875rem;
  }
}

.blog__content {
  padding: 0 0.4375rem;
  margin-bottom: 1.5rem;
}
.blog__card {
  width: auto;
  border: none;
  position: relative;
}
@media (min-width: 768px) {
  .blog__card {
    width: 24.9375rem;
  }
}
.blog__card:hover {
  transform: scale(1.03);
  transition: 0.4s all ease-in-out;
}
.blog__card a img {
  width: 100%;
}
.blog__card-body {
  text-align: center;
  padding: 1.25rem 0;
  border-bottom: 0.0625rem solid #BFBFBF;
  border-left: 0.0625rem solid #BFBFBF;
  border-right: 0.0625rem solid #BFBFBF;
}
.blog__card-body div {
  border-bottom: 0.0625rem solid #BFBFBF;
  padding: 0 1.25rem;
}
.blog__card-body h6, .blog__card-body .h6 {
  color: #BB0100;
  font-size: 0.75rem;
  font-weight: 500;
}
.blog__card-body .card-title {
  color: #282627;
  font-size: 1.25rem;
  font-weight: 500;
  margin-top: 0.4375rem;
  margin-bottom: 1.5rem;
}
.blog__card-body .card-title:hover {
  color: #BB0100;
}
.blog__card-body p {
  font-size: 0.875rem;
  font-weight: 300;
  color: #000;
  margin-top: 1rem;
  margin-bottom: 1.375rem;
  padding: 0 1.25rem;
}
.blog__card-link {
  font-weight: 500;
  font-size: 0.875rem;
  color: #3333;
  text-decoration: underline;
}
.blog__card-link:hover:hover {
  color: #BB0100;
  font-weight: 700;
  transition: 0.4s all ease-in-out;
}
.blog__date {
  width: 5.1875rem;
  position: absolute;
  top: 1.4375rem;
  left: 1.4375rem;
  color: #282627;
  padding: 0.25rem 1.3125rem;
  text-align: center;
  background-color: #fff;
}
.blog__date h2, .blog__date .h2 {
  font-size: 1.875rem;
  font-weight: 700;
  margin: 0;
}
.blog__date h5, .blog__date .h5 {
  margin: 0;
  font-weight: 500;
}
.blog__date hr {
  margin: 0.25rem 0;
  border: 1px solid #000;
}

.store-content {
  position: relative;
}
.store-content a:hover {
  background-color: black;
}
.store-content:hover::after {
  content: "";
  height: 100%;
  width: 100%;
  background-color: #000;
  opacity: 0.6;
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  right: 0;
  margin-inline: auto;
  text-align: center;
  cursor: pointer;
}
.store-content:hover::before {
  content: "";
  background-image: url("../images/svg_icons/plus.svg");
  position: absolute;
  transform: translate(-50%, -50%);
  left: 50%;
  top: 50%;
  width: 57px;
  height: 57px;
  background-repeat: no-repeat;
  z-index: 9;
}
.store-carousel .owl-stage-outer .owl-stage .owl-item {
  margin-right: 0 !important;
}

.signup {
  padding-top: 5.5rem;
  padding-bottom: 5.0625rem;
  text-align: center;
}
@media (min-width: 1200px) {
  .signup {
    background-image: url("../images/signup-bg.png");
    background-repeat: no-repeat;
    background-position: right;
  }
}
.signup__heading {
  font-size: 1.875rem;
  font-weight: 700;
  color: #282627;
}
.signup p {
  font-size: 1.25rem;
  color: #7F7F7F;
  font-weight: 300;
}
.signup__form {
  margin-top: 3.4375rem;
}
.signup__form-email {
  padding-bottom: 0.8125rem;
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-bottom: 1px solid #000;
  width: 90%;
  padding-right: 2.5rem;
  background-color: transparent;
}
.signup__form-email::-moz-placeholder {
  font-size: 1.25rem;
  font-weight: 300;
  color: #7F7F7F;
}
.signup__form-email:-ms-input-placeholder {
  font-size: 1.25rem;
  font-weight: 300;
  color: #7F7F7F;
}
.signup__form-email::placeholder {
  font-size: 1.25rem;
  font-weight: 300;
  color: #7F7F7F;
}
.signup__form-email:focus-visible {
  outline: transparent;
  border-bottom: 1px solid #BB0100;
}
@media (min-width: 576px) {
  .signup__form-email {
    width: 26.625rem;
  }
}
.signup__form-submit {
  background: transparent;
  border: 0;
  margin-left: -2.1875rem;
}
.signup__form-submit:hover span {
  color: #5DBE6B;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
